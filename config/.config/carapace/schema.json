{"$schema":"https://json-schema.org/draft/2020-12/schema","$id":"https://github.com/rsteube/carapace-spec/command","$ref":"#/$defs/Command","$defs":{"Command":{"properties":{"name":{"type":"string","description":"Name of the command"},"aliases":{"items":{"type":"string"},"type":"array","description":"Aliases of the command"},"description":{"type":"string","description":"Description of the command"},"group":{"type":"string","description":"Group of the command"},"flags":{"patternProperties":{".*":{"type":"string"}},"type":"object","description":"Flags of the command with their description"},"persistentflags":{"patternProperties":{".*":{"type":"string"}},"type":"object","description":"Persistent flags of the command with their description"},"completion":{"properties":{"flag":{"patternProperties":{".*":{"items":{"$ref":"#/$defs/action"},"type":"array"}},"type":"object","description":"Flag completion"},"positional":{"items":{"items":{"$ref":"#/$defs/action"},"type":"array"},"type":"array","description":"Positional completion"},"positionalany":{"items":{"$ref":"#/$defs/action"},"type":"array","description":"Positional completion for every other position"},"dash":{"items":{"items":{"$ref":"#/$defs/action"},"type":"array"},"type":"array","description":"Dash completion"},"dashany":{"items":{"$ref":"#/$defs/action"},"type":"array","description":"Dash completion of every other position"}},"additionalProperties":false,"type":"object","description":"Subcommands of the command"},"commands":{"items":{"$ref":"#/$defs/Command"},"type":"array","description":"Completion definition"}},"additionalProperties":false,"type":"object","required":["name"]},"action":{"type":"string","title":"Action","description":"A static value or a macro","examples":["$(\"\")","$_bridge.Argcomplete(\"\")","$_bridge.Carapace(\"\")","$_bridge.CarapaceBin(\"\")","$_bridge.Click(\"\")","$_bridge.Cobra(\"\")","$_bridge.Fish(\"\")","$_bridge.Posener(\"\")","$_color.256Colors()","$_color.HexColors()","$_color.XtermColorNames()","$_fs.BlockDevices()","$_fs.FileModes()","$_fs.FileModesNumeric()","$_fs.FileModesSymbolic()","$_fs.FilenameExtensions()","$_fs.FilesystemTypes()","$_fs.JarFileClasses(\"\")","$_fs.Labels()","$_fs.Mounts()","$_fs.PartitionLabels()","$_fs.PartitionUuids()","$_fs.SubDirectories(\"\")","$_fs.TarFileContents(\"\")","$_fs.Uuids()","$_fs.ZipFileContents(\"\")","$_net.Bssids()","$_net.Connections()","$_net.Devices({bluetooth: false, bond: false, bondslave: false, bridge: false, bridgeslave: false, cdma: false, ethernet: false, gsm: false, infiniband: false, loopback: false, olpcmesh: false, pppoe: false, team: false, teamslave: false, vlan: false, vpn: false, wifi: false, wimax: false})","$_net.Hosts()","$_net.Ipv4Addresses()","$_net.Ports()","$_net.Ssids()","$_net.Subnets()","$_net.http.CacheControlRequestDirectives()","$_net.http.ContentEncodingTokens()","$_net.http.MediaTypes()","$_net.http.RequestHeaderNames()","$_net.http.RequestHeaderValues(\"\")","$_net.http.RequestHeaders()","$_net.http.RequestMethods()","$_net.http.StatusCodes()","$_net.http.Tags()","$_net.http.TransferEncodingTokens()","$_net.http.Urls()","$_net.http.UserAgents()","$_net.ssh.Ciphers()","$_net.ssh.HostKeyAlgorithms()","$_net.ssh.Options()","$_net.ssh.PrivateKeys()","$_net.ssh.PublicKeys()","$_number.Range({format: \"\", start: 0, end: 0})","$_os.Cgroups()","$_os.Displays()","$_os.EnvironmentVariables()","$_os.FontFamilies()","$_os.GpgKeyIds()","$_os.GroupMembers(\"\")","$_os.Groups()","$_os.KernelModules({basedir: \"\", release: \"\"})","$_os.KernelModulesLoaded()","$_os.KernelReleases(\"\")","$_os.Languages()","$_os.Locales()","$_os.MouseButtons()","$_os.PathExecutables()","$_os.Screens(false)","$_os.SessionIds()","$_os.Shells()","$_os.SoundCards()","$_os.Terminals()","$_os.UserGroup()","$_os.Users()","$_os.usb.DeviceNumbers()","$_os.usb.ProductNumbers()","$_ps.FormatSpecifiers()","$_ps.KillSignals()","$_ps.ProcessExecutables()","$_ps.ProcessIds()","$_ps.ProcessStates()","$_time.Date()","$_time.DateTime({strict: false})","$_time.Days({year: 0, month: 0})","$_time.Months()","$_time.Time()","$_time.TimeS()","$_tools.adb.Packages()","$_tools.adb.Users()","$_tools.apt.PackageSearch()","$_tools.apt.Packages()","$_tools.asdf.Plugins()","$_tools.aws.Profiles()","$_tools.aws.Regions()","$_tools.cargo.Dependencies({path: \"\", includeversion: false})","$_tools.cargo.Features(\"\")","$_tools.cargo.NightlyFlags()","$_tools.cargo.clippy.Categories()","$_tools.cargo.clippy.Lints()","$_tools.delta.SyntaxThemes()","$_tools.devbox.InstalledPackages()","$_tools.direnv.Auths()","$_tools.docker.Configs()","$_tools.docker.ContainerIds()","$_tools.docker.ContainerPath()","$_tools.docker.ContainerPorts(\"\")","$_tools.docker.Containers()","$_tools.docker.Contexts()","$_tools.docker.DetachKeys()","$_tools.docker.LogDrivers()","$_tools.docker.Networks()","$_tools.docker.Nodes()","$_tools.docker.Plugins()","$_tools.docker.Ports()","$_tools.docker.Repositories()","$_tools.docker.RepositoryTags()","$_tools.docker.Secrets()","$_tools.docker.Services()","$_tools.docker.Stacks(\"\")","$_tools.docker.Volumes()","$_tools.docker.compose.Containers({files: [], paused: false, restarting: false, removing: false, running: false, dead: false, created: false, exited: false})","$_tools.docker.compose.Files({files: [], service: \"\", index: 0})","$_tools.docker.compose.Services([\"\"])","$_tools.docker.compose.Users({files: [], service: \"\", index: 0})","$_tools.docker.compose.Volumes([\"\"])","$_tools.gh.ConfigHosts()","$_tools.gh.Contents({host: \"\", owner: \"\", name: \"\", branch: \"\", path: \"\"})","$_tools.gh.Emojis()","$_tools.gh.GpgKeys({host: \"\"})","$_tools.gh.LabelFields()","$_tools.gh.Labels({host: \"\", owner: \"\", name: \"\"})","$_tools.gh.Licenses({host: \"\"})","$_tools.gh.Organizations({host: \"\"})","$_tools.gh.OwnerRepositories({host: \"\"})","$_tools.gh.Owners({host: \"\"})","$_tools.gh.PinnedIssues({host: \"\", owner: \"\", name: \"\"})","$_tools.gh.Repositories({host: \"\", owner: \"\"})","$_tools.gh.SshKeys({host: \"\"})","$_tools.gh.Users({host: \"\"})","$_tools.git.Aliases(\"\")","$_tools.git.Authors()","$_tools.git.BundleHeads(\"\")","$_tools.git.Changes({staged: false, unstaged: false})","$_tools.git.CleanupMode()","$_tools.git.ColorConfigs()","$_tools.git.Colors()","$_tools.git.Committers()","$_tools.git.ConfigTypeOptions(\"\")","$_tools.git.ConfigTypes()","$_tools.git.Configs()","$_tools.git.CurrentBranch()","$_tools.git.FieldNames()","$_tools.git.LsRemoteRefs({url: \"\", branches: false, tags: false})","$_tools.git.MergeStrategy()","$_tools.git.MergeStrategyOptions(\"\")","$_tools.git.RefFiles(\"\")","$_tools.git.Refs({localbranches: false, remotebranches: false, commits: 0, tags: false, stashes: false})","$_tools.git.RemoteBranches(\"\")","$_tools.git.RemoteUrls(\"\")","$_tools.git.Remotes()","$_tools.git.RepositorySearch({prefix: false, github: false, gitlab: false})","$_tools.git.Stashes()","$_tools.git.SubmoduleBranches([\"\"])","$_tools.git.SubmoduleNames()","$_tools.git.SubmodulePaths()","$_tools.git.TextAttributes()","$_tools.git.Variables()","$_tools.git.WhitespaceModes()","$_tools.git.Worktrees()","$_tools.golang.BuildTags()","$_tools.golang.Funcs([\"\"])","$_tools.golang.ModuleSearch()","$_tools.golang.Modules({direct: false, indirect: false, replace: false, exclude: false, includeversion: false})","$_tools.golang.Versions()","$_tools.golang.WorkModules(\"\")","$_tools.golang.WorkReplacements(\"\")","$_tools.golang.WorkUses(\"\")","$_tools.gum.Alignments()","$_tools.gum.Borders()","$_tools.gum.Colors()","$_tools.helix.Languages()","$_tools.jaeger.SamplingTypes()","$_tools.journalctl.Outputs()","$_tools.just.Recipes(\"\")","$_tools.just.Variables(\"\")","$_tools.kak.Sessions()","$_tools.kubectl.ValidationModes()","$_tools.make.Targets(\"\")","$_tools.mitmproxy.AppendableFiles()","$_tools.mitmproxy.ConsoleLayouts()","$_tools.mitmproxy.FlowFilters()","$_tools.mitmproxy.Modes()","$_tools.mitmproxy.ModifyBodyPattern()","$_tools.mitmproxy.ModifyHeaderPattern()","$_tools.mitmproxy.OptionNames()","$_tools.mitmproxy.OptionValues(\"\")","$_tools.mpv.AudioDecoders()","$_tools.mpv.AudioFilters()","$_tools.mpv.HardwareDecodingAPIs()","$_tools.mpv.VideoDecoders()","$_tools.mpv.VideoFilters()","$_tools.newrelic.AccountIds()","$_tools.newrelic.ApplicationGuids(\"\")","$_tools.newrelic.ApplicationIds(\"\")","$_tools.newrelic.DiagnosticSuites()","$_tools.newrelic.Profiles()","$_tools.newrelic.TraceObservers(\"\")","$_tools.nix.ChannelPackages()","$_tools.nix.LocalChannels()","$_tools.nix.Packages(\"\")","$_tools.nix.RemoteChannels()","$_tools.npm.Dependencies()","$_tools.npm.DependencyNames()","$_tools.npm.PackageNames(\"\")","$_tools.npm.PackageSearch(\"\")","$_tools.npm.PackageTags({registry: \"\", package: \"\"})","$_tools.npm.PackageVersions({registry: \"\", package: \"\"})","$_tools.pacman.PackageFiles([\"\"])","$_tools.pacman.PackageGroups()","$_tools.pacman.PackageSearch()","$_tools.pacman.Packages()","$_tools.pacman.Repositories()","$_tools.pip.ConfigValues({global: false, site: false, user: false})","$_tools.pip.InstalledPackages()","$_tools.pip.PackageSearch()","$_tools.pub.HostedExecutables({name: \"\", version: \"\"})","$_tools.pub.PackageSearch()","$_tools.pub.PackageVersions(\"\")","$_tools.task.Tasks(\"\")","$_tools.tmux.ClientFlags()","$_tools.tmux.Features()","$_tools.tmux.Panes()","$_tools.tmux.Sessions()","$_tools.tmux.Windows()","$_tools.tshark.FileTypes()","$_tools.tshark.Interfaces()","$_tools.tshark.LinkTypes(\"\")","$_tools.tshark.Protocols()","$_tools.tshark.ReadFormats()","$_tools.tshark.Selectors()","$_tools.tshark.Statistics()","$_tools.turbo.PipelineTasks()","$_tools.upower.Devices()","$_tools.virtualbox.Machines()","$_tools.youtubedl.Formats(\"\")","$_tools.youtubedl.SubLangs(\"\")","$bash(\"\")","$directories()","$elvish(\"\")","$files([\"\"])","$fish(\"\")","$ion(\"\")","$message(\"\")","$noflag()","$nu(\"\")","$osh(\"\")","$pwsh(\"\")","$sh(\"\")","$spec(\"\")","$xonsh(\"\")","$zsh(\"\")"]}}}